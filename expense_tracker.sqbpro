<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="expense_tracker.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1323"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="expense" custom_title="0" dock_id="1" table="4,7:mainexpense"/><dock_state state="000000ff00000000fd00000001000000020000044200000260fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000000004420000011e00ffffff000002690000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="expense" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="5" mode="0"/></sort><column_widths><column index="1" value="35"/><column index="2" value="60"/><column index="3" value="98"/><column index="4" value="72"/><column index="5" value="53"/><column index="6" value="62"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="output" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="87"/><column index="2" value="119"/><column index="3" value="103"/><column index="4" value="300"/><column index="5" value="55"/><column index="6" value="71"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1*">SELECT * FROM expense_tracker_data;
SELECT Category, SUM(Amount) AS Total_Spent FROM expense_tracker_data GROUP BY Category;
SELECT Payment_mode, SUM(Amount) AS Total_Spent FROM expense_tracker_data GROUP BY Payment_mode;
SELECT SUM(Cashback) AS Total_Cashback FROM expense_tracker_data;
SELECT Category, SUM(Amount) AS Total_Spent FROM expense_tracker_data GROUP BY Category ORDER BY Total_Spent DESC LIMIT 5;
SELECT Payment_mode, SUM(Amount) AS Total_Spent FROM expense_tracker_data WHERE Category = 'transportation' GROUP BY Payment_mode;
SELECT Cashback FROM expense_tracker_data WHERE Cashback &gt; 0;
SELECT * FROM expense_tracker_data WHERE Cashback &gt; 0;
SELECT strftime('%Y-%m', Date) AS Month, SUM(Amount) AS Total_Spending FROM expense_tracker_data GROUP BY strftime('%Y-%m', Date);
SELECT strftime('%Y-%m', Date) AS Month, Category, SUM(Amount) AS Total_Spending FROM expense_tracker_data WHERE Category IN ('travel', 'home essential', 'investments') GROUP BY strftime('%Y-%m', Date), Category ORDER BY Category, Total_Spending DESC;
SELECT strftime('%m-%Y', Date) AS Month, Category, Description, COUNT(*) AS Occurrences FROM expense_tracker_data WHERE Category IN ('transportation', 'travel') GROUP BY strftime('%m', Date), Category, Description HAVING COUNT(*) &gt; 1 ORDER BY Month, Occurrences DESC;
SELECT strftime('%Y-%m', Date) AS Month, SUM(Cashback) AS Total_Cashback FROM expense_tracker_data GROUP BY strftime('%Y-%m', Date) ORDER BY Month;
SELECT strftime('%Y-%m', Date) AS Month, SUM(Amount) AS Total_Spending FROM expense_tracker_data GROUP BY strftime('%Y-%m', Date) ORDER BY Month;
WITH Spending AS (
    SELECT strftime('%Y-%m', Date) AS Month, 
           SUM(Amount) AS Total_Spending
    FROM expense_tracker_data
    GROUP BY strftime('%Y-%m', Date)
    ORDER BY Month
)
SELECT Month,
       Total_Spending,
       LAG(Total_Spending) OVER (ORDER BY Month) AS Previous_Spending,
       CASE
           WHEN Total_Spending &gt; LAG(Total_Spending) OVER (ORDER BY Month) THEN 'Increasing'
           WHEN Total_Spending &lt; LAG(Total_Spending) OVER (ORDER BY Month) THEN 'Decreasing'
           ELSE 'Stable'
       END AS Trend
FROM Spending;
SELECT Category AS Travel_Type, AVG(Amount) AS Average_Cost, MIN(Amount) AS Minimum_Cost, MAX(Amount) AS Maximum_Cost FROM expense_tracker_data WHERE Category IN ('parking', 'transportation') GROUP BY Category ORDER BY Average_Cost DESC;
SELECT strftime('%w', Date) AS Day_of_Week,  SUM(Amount) AS Total_Spending, AVG(Amount) AS Average_Spending FROM expense_tracker_data WHERE Category = 'groceries' GROUP BY Day_of_Week ORDER BY Day_of_Week;
SELECT Category, SUM(Amount) AS Total_Spending, COUNT(*) AS Transaction_Count FROM expense_tracker_data GROUP BY Category ORDER BY Total_Spending DESC;
SELECT Category, SUM(Amount) AS Total_Spending,(SUM(Amount) * 100.0 / (SELECT SUM(Amount) FROM expense_tracker_data)) AS Percentage_Contribution FROM expense_tracker_data GROUP BY Category ORDER BY Percentage_Contribution DESC LIMIT 1;




</sql><current_tab id="0"/></tab_sql></sqlb_project>
